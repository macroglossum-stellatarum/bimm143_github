---
title: "Class 9: Structural Bioinformatics 1"
author: "Kira"
format: gfm
---

## What is the PDB anyway?

The main database of biomolecular structures is called the PDB and is available at www.rcsb.org.

Let's begin by seeing what is in this database:

```{r}
pdbstats <- read.csv("Data Export Summary.csv", row.names=1)
head(pdbstats)
```

# How can we change the values in the table from strings to numbers?

```{r}
as.numeric(gsub(",","", pdbstats$X.ray))
```

>Q1: What percentage of structures in the PDB are solved by X-Ray and Electron Microscopy.

```{r}
# Getting rid of the commas so we can do math
n.xray <- sum(as.numeric(gsub(",","", pdbstats$X.ray)))
n.em <- sum(as.numeric(gsub(",","", pdbstats$EM)))
n.total <- sum(as.numeric(gsub(",","", pdbstats$Total)))
```

```{r}
p.xray <- (n.xray)/(n.total) * 100
p.em <- (n.em)/(n.total) * 100

# and to 2 s.f 
round(p.xray,2)
round(p.em,2)

```

The percentage of X-ray structures is 85.9% and the percentage of EM structures is 7.02% (in the current PDB database). 

>Q2: What proportion of structures in the PDB are protein?

```{r}
# Looking at totals of all rows, the first output will correspond to protein only
as.numeric(gsub(",","",pdbstats$Total))/n.total *100
```

The proportion of structures in the PDB that are only protein is 86.89%. 

>Q3: Type HIV in the PDB website search box on the home page and determine how many HIV-1 protease structures are in the current PDB?

It is not straightforward to find all HIV-1 protease structures using plain text searching on the database.

## Visualizing the HIV-1 protease structure

>Q4: Water molecules normally have 3 atoms. Why do we see just one atom per water molecule in this structure?

Hydrogen atoms are so small that they often cannot be seen in the X-ray crystallography structure of the protein (i.e the hydrogen atom is smaller than the resolution of the structure).

>Q5: There is a critical “conserved” water molecule in the binding site. Can you identify this water molecule? What residue number does this water molecule have

HOH 308 is a critically conserved water molecule that is important to the binding site.

>Q6: Generate and save a figure clearly showing the two distinct chains of HIV-protease along with the ligand. You might also consider showing the catalytic residues ASP 25 in each chain and the critical water (we recommend “Ball & Stick” for these side-chains). Add this figure to your Quarto document.

![Asp25 residues and HOH 308 are spacefilled in addition to ligand.](1HSG.png)

## Introduction to Bio3D in R

We will use the `bio3d` package for this section:

```{r}
library(bio3d)
```

```{r}
pdb <- read.pdb("1hsg")
pdb
```

>Q7: How many amino acid residues are there in this pdb object? 

There are 198 amino acid residues.

>Q8: Name one of the two non-protein residues?

HOH.

>Q9: How many protein chains are in this structure?

There are 2 protein chains in this structure.

```{r}
head(pdb$atom)
```

What is the first residue 3 letter code and 1 letter code?:

```{r}
pdb$atom$resid[1]
aa321(pdb$atom$resid[1])
```

## Predicting functional motions of a single structure

Let's read a new PDB structure of Adenlyate Kinase (PDB code: 6s36) and perform normal mode analysis.

```{r}
adk <- read.pdb("6s36")
```

```{r}
adk
```

Normal mode analysis (NMA) is a structural bioinformatics method to predict protein flexibility and potential functional motions (a.k.a. conformational changes).

```{r}
# Now we can perform normal mode analysis
m <- nma(adk)
plot(m)
```

Peaks in the fluctuations plot show areas where the protein is most flexible. 

```{r}
mktrj(m, file="adk_m7.pdb")
```

## Comparative structure analysis of Adenylate Kinase

Today we are continuing where we left off on Tuesday, building towards completing the loop from biomolecular structural data to our new analysis methods like PCA and clustering.

We will begin by getting a single protein sequence for a protein family of interest.

```{r}
# Install packages in the R console NOT your Rmd/Quarto file

#install.packages("bio3d")
#install.packages("devtools")
#install.packages("BiocManager")

#BiocManager::install("msa")
#devtools::install_bitbucket("Grantlab/bio3d-view")
```


>Q10. Which of the packages above is found only on BioConductor and not CRAN?

`msa()` is found only on BioConductor and not CRAN.

>Q11. Which of the above packages is not found on BioConductor or CRAN?: 

`biod3d.view()` is not found on BioConductor or CRAN. 

>Q12. True or False? Functions from the devtools package can be used to install packages from GitHub and BitBucket?

This is true, we can use `devtools()` to install packages from both GitHub and BitBucket.

```{r}
library(bio3d)
aa <- get.seq("1ake_A")
aa
```

>Q13. How many amino acids are in this sequence, i.e. how long is this sequence?

There are 214 amino acids in this sequence.

Now we can use this sequence as a query to BLAST search the PDB to find similar sequences and structures.

```{r}
# Blast or hmmer search, will comment out second line to prevent subsequent runs when rendering
# b <- blast.pdb(aa)
```

I could save and load my blast results next time so I don't need to run the search every time.

```{r}
# saveRDS(b,file="blast_results.RDS")
```

```{r}
# If I wanted to see the results again
b <- readRDS("blast_results.RDS")
```


We now want to generate a summary of our BLAST results using a plot.

```{r}
# Plot a summary of search results
 hits <- plot(b)
```

```{r}
 hits$pdb.id
```

```{r}
# Download related PDB files, additional arguments will make our data a little tidier
 files <- get.pdb(hits$pdb.id, path="pdbs", split=TRUE, gzip=TRUE)
```

Next, we are going to align and superimpose all these structures.

## Align and superpose structures

```{r}
# Align related PDBs. fit = TRUE will superimpose them and "msa" will allow us to perform a multisequence alignment
pdbs <- pdbaln(files, fit = TRUE, exefile="msa")
pdbs
```

```{r}
# Vector containing PDB codes for figure axis
ids <- basename.pdb(pdbs$id)

# Draw schematic alignment
#plot(pdbs, labels=ids)
```

In this plot, grey regions depict aligned residues, while white depict gap regions. The red bar at the top depicts sequence conservation. 

We also want to collect annotation for each entry:

```{r}
anno <- pdb.annotate(ids)
unique(anno$source)
```

## Principal component analysis of Adenylate kinase

Now we can do PCA to try and make sense of this data. We will not use the `prcomp()` function from base R, but the `pca()` function from the `bio3d` package as it is designed to work nicely with biomolecular data.

```{r}
pc.xray <- pca(pdbs)
plot(pc.xray)
```

We can now focus in on PC1 vs. PC2 and make a plot that is colored by cluster group.

```{r}
# Calculate RMSD (distance between all elements)
rd <- rmsd(pdbs)

# Structure-based clustering (making 3 groups)
hc.rd <- hclust(dist(rd))
grps.rd <- cutree(hc.rd, k=3)

plot(pc.xray, 1:2, col="grey50", bg=grps.rd, pch=21, cex=1)
```

Now, we want to visualize major structural variations:

```{r}
# Visualize first principal component
pc1 <- mktrj(pc.xray, pc=1, file="pc_1.pdb")
```

We can now open this trajectory file in Molstar to view a movie of the major differences (i.e displacements) in the structure set as we move along PC1.

We can also plot this information in `ggplot()` for a better looking, more informational plot.

```{r}
#Plotting results with ggplot2
library(ggplot2)
library(ggrepel)

df <- data.frame(PC1=pc.xray$z[,1], 
                 PC2=pc.xray$z[,2], 
                 col=as.factor(grps.rd),
                 ids=ids)

p <- ggplot(df) + 
  aes(PC1, PC2, col=col, label=ids) +
  geom_point(size=2) +
  geom_text_repel(max.overlaps = 20) +
  theme(legend.position = "none")
p
```


