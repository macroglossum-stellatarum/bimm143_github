---
title: "Class 17: Vaccination Rate Mini-Project"
author: "Kira"
format: gfm
---

# Data Import

```{r}
vax <- read.csv("covid19vaccinesbyzipcode_test.csv")
head(vax)
```

>Q1.  What column details the total number of people fully vaccinated?

```{r}
#vax$persons_fully_vaccinated
```

The "persons_fully_vaccinated" column contains this information.

>Q2. What column details the Zip code tabulation area?

```{r}
#vax$zip_code_tabulation_area
```

The column "zip_code_tabulation_area" contains this information.

>Q3. What is the earliest date in this dataset?

```{r}
vax$as_of_date[1]
```

The earliest date in this dataset is 2021-01-05.

>Q4. What is the latest date in this dataset? 

```{r}
vax$as_of_date[nrow(vax)]
```

The latest date in this dataset is 2023-02-28.

We can use the `skim()` function for a quick overview of a new dataset like this one:

```{r}
skimr::skim(vax)
```

>Q5. How many numeric columns are in this dataset?

There are 13 numeric columns in this dataset.

>Q6. Note that there are “missing values” in the dataset. How many NA values there in the persons_fully_vaccinated column?

```{r}
n.missing <- sum( is.na(vax$persons_fully_vaccinated) )
n.missing
```

There are 16525	NA values in the persons_fully_vaccinated column.

>Q7. What percent of persons_fully_vaccinated values are missing (to 2 significant figures)? 

```{r}
round(n.missing/nrow(vax) * 100,2)
```

8.29% of "persons_fully_vaccinated" values are missing.

>Q8. [Optional]: Why might this data be missing?

Since there are military bases in Southern California, these rates are not reported and that data is not available.

## Working with Dates:

The lubridate package makes working with dates and times in R much less of a pain. 

```{r}
library(lubridate)
```

```{r}
today()
```

```{r}
vax$as_of_date <- ymd(vax$as_of_date)
```

We can now do math with dates since we have specified the date format.

>Q9. How many days have passed since the last update of the dataset?

```{r}
today() - vax$as_of_date[nrow(vax)]
```

It has been 7 days since the last update to the dataset.

>Q. How many total days are in the dataset?

```{r}
vax$as_of_date[nrow(vax)] - vax$as_of_date[1]
```

>Q10. How many unique dates are in the dataset (i.e. how many different dates are detailed)?

```{r}
length(unique(vax$as_of_date))
```

There are 113 unique dates in this dataset.

## Working with ZIP Codes:

ZIP codes are also rather annoying things we work with as they are numeric but not in the conventional sense of doing math. We can use the `zipcodeR()` package to help deal with this:

```{r}
library(zipcodeR)
```

```{r}
geocode_zip("92101")
```

Calculate the distance between the centroids of any two ZIP codes in miles:

```{r}
zip_distance("92101","92131")
```

More usefully, we can pull census data about ZIP code areas (including median household income etc.). For example:

```{r}
reverse_zipcode(c("92101","92131"))
```

## Focus on the San Diego Area:

Let’s now focus in on the San Diego County area by restricting ourselves first to `vax$county == "San Diego"` entries. We have two main choices on how to do this. The first using base R the second using the dplyr package:

```{r}
# Subset to San Diego county only areas
sd <- vax[ vax$county == "San Diego" , ]
nrow(sd)
```

We can perform this same step using the `dplyr()` package:

```{r}
library(dplyr)
```

```{r}
sd <- filter(vax, county == "San Diego")

nrow(sd)
```

```{r}
sd.10 <- filter(vax, county == "San Diego" &
                age5_plus_population > 10000)
```

>Q. How many ZIP code areas are we dealing with?

```{r}
n_distinct(sd.10$zip_code_tabulation_area)
```

>Q11. How many distinct ZIP codes are listed for San Diego County?

```{r}
n_distinct(sd$zip_code_tabulation_area)
```

There are 107 distinct zip codes in San Diego County.

>Q12. What San Diego County ZIP code area has the largest 12 + Population in this dataset?

```{r}
ind <- which.max(sd$age12_plus_population)
sd$zip_code_tabulation_area[ind]
```

The San Diego County ZIP code area with the largest 12+ population is 92154.

```{r}
reverse_zipcode("92154")
```

>Q13. What is the overall average “Percent of Population Fully Vaccinated” value for all San Diego “County” as of “2023-02-28” (i.e the most recent date)?

```{r}
library(dplyr)
```

```{r}
sd.today <- filter(sd, as_of_date == "2023-02-28")
```


```{r}
mean(sd.today$percent_of_population_fully_vaccinated, na.rm=T) * 100
```

As of 2023-02-28, 74% of San Diego County was fully vaccinated.

>Q14. Using either ggplot or base R graphics make a summary figure that shows the distribution of Percent of Population Fully Vaccinated values as of “2023-02-28”?

```{r}
hist(sd.today$percent_of_population_fully_vaccinated, labels=T,main="Histogram of Vaccination Rates Across San Diego County",xlab="Percent of Population Fully Vaccinated on 2023-02-28") 
```

```{r}
library(ggplot2)
ggplot(sd.today) + aes(percent_of_population_fully_vaccinated) + geom_histogram() + ggtitle("Vaccination Rate Across San Diego as of Last Week") + xlab("Percent of Population Fully Vaccinated") + ylab("Count (ZIP Code Areas)")
```

## Focus on UCSD/La Jolla:

```{r}
ucsd <- filter(sd, zip_code_tabulation_area=="92037")
ucsd[1,]$age5_plus_population
```

>Q15. Using ggplot make a graph of the vaccination rate time course for the 92037 ZIP code area:

```{r}
ucplot <- ggplot(ucsd) +
  aes(as_of_date,percent_of_population_fully_vaccinated) +
  geom_point() +
  geom_line(group=1) +
  ylim(c(0,1)) +
  labs(title="Vaccination Rate for La Jolla CA 92109", y="Percent Vaccinated", x="Date")
ucplot
```

## Comparing to Similar Sized Areas:

```{r}
# Subset to all CA areas with a population as large as 92037
vax.36 <- filter(vax, age5_plus_population > 36144 &
                as_of_date == "2023-02-28")
```

>Q16. Calculate the mean “Percent of Population Fully Vaccinated” for ZIP code areas with a population as large as 92037 (La Jolla) as_of_date “2023-02-28”. Add this as a straight horizontal line to your plot from above with the geom_hline() function?

```{r}
ave <- mean(vax.36$percent_of_population_fully_vaccinated)
ave
```

```{r}
ucplot + geom_hline(yintercept=ave, color="red", linetype=2)
```

>Q17. What is the 6 number summary (Min, 1st Qu., Median, Mean, 3rd Qu., and Max) of the “Percent of Population Fully Vaccinated” values for ZIP code areas with a population as large as 92037 (La Jolla) as_of_date “2023-02-28”?

```{r}
sum <- summary(vax.36$percent_of_population_fully_vaccinated)
sum
```

>Q18. Using ggplot generate a histogram of this data.

```{r}
ggplot(vax.36) + aes(percent_of_population_fully_vaccinated) + geom_histogram() + xlim(0,1)
```

>Q19. Is the 92109 and 92040 ZIP code areas above or below the average value you calculated for all these above?

```{r}
x <- filter(vax.36, zip_code_tabulation_area %in% c("92109", "92040"))
x$percent_of_population_fully_vaccinated
```

Both of these ZIP codes (92109 and 92040) are both below the average I calculated previously.

>Q20. Finally make a time course plot of vaccination progress for all areas in the full dataset with a age5_plus_population > 36144.

```{r}
vax.36.all <- filter(vax, age5_plus_population > 36144)


ggplot(vax.36.all) +
  aes(as_of_date,
      percent_of_population_fully_vaccinated, 
      group=zip_code_tabulation_area) +
  geom_line(alpha=0.2, color="purple") +
  ylim(c(0,1)) +
  labs(x="Date", y="Percent Vaccinated",
       title="Vaccination Rates Across California",
       subtitle="Only areas with a population above 36k are shown") +
  geom_hline(yintercept = ave, linetype=2, color="black")
```
